"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[962],{2208:(t,e,n)=>{n.r(e),n.d(e,{frontMatter:()=>s,contentTitle:()=>p,metadata:()=>m,toc:()=>u,default:()=>c});var a=n(7896),r=n(1461),i=(n(2784),n(876)),l=n(2039),o=n(1846),d=["components"],s={sidebar_label:"useQuery",sidebar_position:12,title:"useQuery"},p=void 0,m={unversionedId:"custom-hooks/use-query",id:"custom-hooks/use-query",isDocsHomePage:!1,title:"useQuery",description:"About",source:"@site/docs/custom-hooks/use-query.mdx",sourceDirName:"custom-hooks",slug:"/custom-hooks/use-query",permalink:"/react-hooks-extended/custom-hooks/use-query",editUrl:"https://github.com/MomenSherif/react-hooks-extended/tree/master/apps/docs/docs/custom-hooks/use-query.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_label:"useQuery",sidebar_position:12,title:"useQuery"},sidebar:"docsSidebar",previous:{title:"useArrayState",permalink:"/react-hooks-extended/custom-hooks/use-array-state"},next:{title:"useMutation",permalink:"/react-hooks-extended/custom-hooks/use-mutation"}},u=[{value:"About",id:"about",children:[],level:2},{value:"Import",id:"import",children:[],level:2},{value:"Baisc example",id:"baisc-example",children:[],level:2},{value:"Arguments",id:"arguments",children:[],level:2},{value:"Return",id:"return",children:[],level:2},{value:"Playground",id:"playground",children:[],level:2}],k={toc:u};function c(t){var e=t.components,n=(0,r.Z)(t,d);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"about"},"About"),(0,i.kt)("p",null,"Query data with loading & error states indicators easier with useQuery."),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useQuery } from 'react-hooks-extended';\n")),(0,i.kt)("h2",{id:"baisc-example"},"Baisc example"),(0,i.kt)(l.Z,{groupId:"lng",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const { data, isLoading, isError, error, refetch } = useQuery(() =>\n    // Can be fetch, axios ... etc. any thing that returns a promise\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=3').then(res =>\n      res.json()\n    )\n  );\n\n  if (isLoading) return <div>Loading...</div>;\n  if (isError)\n    return (\n      <div>\n        <p>{error}</p>\n        <button onClick={refetch}>Retry</button>\n      </div>\n    );\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n"))),(0,i.kt)(o.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"function Example() {\n  const { data, isLoading, isError, error, refetch } = useQuery<Todo[], Error>(\n    () =>\n      // Can be fetch, axios ... etc. any thing that returns a promise\n      fetch('https://jsonplaceholder.typicode.com/todos?_limit=3').then<Todo[]>(\n        res => res.json()\n      )\n  );\n\n  if (isLoading) return <div>Loading...</div>;\n  if (isError)\n    return (\n      <div>\n        <p>{error}</p>\n        <button onClick={refetch}>Retry</button>\n      </div>\n    );\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"queryFn")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"() => Promise<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Query function that returns a promise with resolved data"),(0,i.kt)("td",{parentName:"tr",align:"left"},"true"),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"deps")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"DependencyList")),(0,i.kt)("td",{parentName:"tr",align:"left"},"List of dependencies that will cause query to rerun if changed"),(0,i.kt)("td",{parentName:"tr",align:"left"},"false"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"[]"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UseQueryOptions")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Query options"),(0,i.kt)("td",{parentName:"tr",align:"left"},"false"),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options.enabled")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Enable or disable the query"),(0,i.kt)("td",{parentName:"tr",align:"left"},"false"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options.onSuccess")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"(data: T) => void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Function to be called with the data after query success"),(0,i.kt)("td",{parentName:"tr",align:"left"},"false"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options.onError")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"(error: E) => void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Function to be called with the error after query fail"),(0,i.kt)("td",{parentName:"tr",align:"left"},"false"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,i.kt)("h2",{id:"return"},"Return"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Return value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Resolved data from query function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"error")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"E")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Error state catched from query function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isLoading")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Is query running")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isError")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Is query failed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refetch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Retry query function")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"playground"},"Playground"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Playground() {\n  const [enabled, toggleEnabled] = useToggle();\n  const { data, isLoading, isError, error, refetch } = useQuery(\n    () =>\n      fetch('https://jsonplaceholder.typicode.com/todos?_limit=3').then(res =>\n        res.json()\n      ),\n    [],\n    { enabled }\n  );\n\n  // Make your network offline from Devtools to see error state.\n  if (isLoading) return <div>Loading...</div>;\n\n  // Slow your network from Devtools to see loading state.\n  if (isError)\n    return (\n      <div>\n        <p>{error.message}</p>\n        <button onClick={refetch}>Retry</button>\n      </div>\n    );\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n      <button onClick={toggleEnabled}>{enabled ? 'Disable' : 'Enable'}</button>\n    </div>\n  );\n}\n")))}c.isMDXComponent=!0}}]);