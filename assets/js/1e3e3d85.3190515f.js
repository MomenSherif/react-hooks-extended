"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[218],{9600:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>d,contentTitle:()=>m,metadata:()=>u,toc:()=>p,default:()=>c});var n=a(7896),l=a(1461),r=(a(2784),a(876)),i=a(2039),o=a(1846),s=["components"],d={sidebar_label:"useTimeout",sidebar_position:4,title:"useTimeout"},m=void 0,u={unversionedId:"custom-hooks/use-timeout",id:"custom-hooks/use-timeout",isDocsHomePage:!1,title:"useTimeout",description:"About",source:"@site/docs/custom-hooks/use-timeout.mdx",sourceDirName:"custom-hooks",slug:"/custom-hooks/use-timeout",permalink:"/react-hooks-extended/custom-hooks/use-timeout",editUrl:"https://github.com/MomenSherif/react-hooks-extended/tree/master/apps/docs/docs/custom-hooks/use-timeout.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"useTimeout",sidebar_position:4,title:"useTimeout"},sidebar:"docsSidebar",previous:{title:"useToggle",permalink:"/react-hooks-extended/custom-hooks/use-toggle"},next:{title:"useInterval",permalink:"/react-hooks-extended/custom-hooks/use-interval"}},p=[{value:"About",id:"about",children:[],level:2},{value:"Import",id:"import",children:[],level:2},{value:"Baisc example",id:"baisc-example",children:[],level:2},{value:"Arguments",id:"arguments",children:[],level:2},{value:"Playground",id:"playground",children:[],level:2}],k={toc:p};function c(e){var t=e.components,a=(0,l.Z)(e,s);return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"about"},"About"),(0,r.kt)("p",null,"Sets a timer which executes a function the timer expires."),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useTimeout } from 'react-hooks-extended';\n")),(0,r.kt)("h2",{id:"baisc-example"},"Baisc example"),(0,r.kt)(i.Z,{groupId:"lng",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"useTimeout(() => {\n  console.log('useTimeout');\n}, 1000);\n"))),(0,r.kt)(o.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"useTimeout(() => {\n  console.log('useTimeout');\n}, 1000);\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"callback")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Function")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function to be executed after the timer expires"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"delay")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"Date")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The time in 'milliseconds' or 'Date' in the future that the timer should wait"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"UseTimeoutOptions")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Timer options"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options.enabled")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enable or disable the timeout"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"playground"},"Playground"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Playground() {\n  const [isEnabled, toggleIsEnabled] = useToggle();\n  const [state, setState] = useState('');\n\n  useTimeout(\n    () => {\n      setState('useTimeout');\n    },\n    1000,\n    { enabled: isEnabled }\n  );\n\n  return (\n    <div>\n      <h1>{state}</h1>\n      <button onClick={toggleIsEnabled}>\n        {isEnabled ? 'Disable' : 'Enable'}\n      </button>\n    </div>\n  );\n}\n")))}c.isMDXComponent=!0}}]);