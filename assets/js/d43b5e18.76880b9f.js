"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[754],{8629:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>s,metadata:()=>p,toc:()=>c,default:()=>k});var a=n(7896),o=n(1461),l=(n(2784),n(876)),d=n(2039),r=n(1846),i=["components"],u={sidebar_label:"useDidUpdate",sidebar_position:7,title:"useDidUpdate"},s=void 0,p={unversionedId:"custom-hooks/use-did-update",id:"custom-hooks/use-did-update",isDocsHomePage:!1,title:"useDidUpdate",description:"About",source:"@site/docs/custom-hooks/use-did-update.mdx",sourceDirName:"custom-hooks",slug:"/custom-hooks/use-did-update",permalink:"/react-hooks-extended/custom-hooks/use-did-update",editUrl:"https://github.com/MomenSherif/react-hooks-extended/tree/master/apps/docs/docs/custom-hooks/use-did-update.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"useDidUpdate",sidebar_position:7,title:"useDidUpdate"},sidebar:"docsSidebar",previous:{title:"useDidMount",permalink:"/react-hooks-extended/custom-hooks/use-did-mount"},next:{title:"useDebounceEffect",permalink:"/react-hooks-extended/custom-hooks/use-debounce-effect"}},c=[{value:"About",id:"about",children:[],level:2},{value:"Import",id:"import",children:[],level:2},{value:"Baisc example",id:"baisc-example",children:[],level:2},{value:"Arguments",id:"arguments",children:[],level:2},{value:"Playground",id:"playground",children:[],level:2}],m={toc:c};function k(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"about"},"About"),(0,l.kt)("p",null,"Calls a callback after each update in the dependency list."),(0,l.kt)("h2",{id:"import"},"Import"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useDidUpdate } from 'react-hooks-extended';\n")),(0,l.kt)("h2",{id:"baisc-example"},"Baisc example"),(0,l.kt)(d.Z,{groupId:"lng",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const [count, setCount] = useState(0);\n\n  useDidUpdate(() => {\n    console.log(`Updated count ${count}`);\n  }, [count]);\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={() => setCount(c => c + 1)}>Increment</button>\n    </div>\n  );\n}\n"))),(0,l.kt)(r.Z,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"function Example() {\n  const [count, setCount] = useState(0);\n\n  useDidUpdate(() => {\n    console.log(`Updated count ${count}`);\n  }, [count]);\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={() => setCount(c => c + 1)}>Increment</button>\n    </div>\n  );\n}\n")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"callback")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"EffectCallback")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Imperative function that can return a cleanup function."),(0,l.kt)("td",{parentName:"tr",align:"left"},"true"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"deps")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"DependencyList")),(0,l.kt)("td",{parentName:"tr",align:"left"},"If present, effect will only activate if the values in the list change."),(0,l.kt)("td",{parentName:"tr",align:"left"},"false"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"playground"},"Playground"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Playground() {\n  const [count, setCount] = useState(0);\n\n  useDidUpdate(() => {\n    // Open console\n    console.log(`Updated count ${count}`);\n  }, [count]);\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={() => setCount(c => c + 1)}>Increment</button>\n    </div>\n  );\n}\n")))}k.isMDXComponent=!0}}]);